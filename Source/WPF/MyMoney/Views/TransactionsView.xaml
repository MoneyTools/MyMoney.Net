<UserControl x:Class="Walkabout.Views.TransactionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Walkabout.Controls"
             xmlns:vc="clr-namespace:Walkabout.Views.Controls"
             xmlns:c="clr-namespace:Walkabout.WpfConverters"
             xmlns:p="clr-namespace:Walkabout.Commands"
             xmlns:views="clr-namespace:Walkabout.Views"
             xmlns:u="clr-namespace:Walkabout.Utilities"
             xmlns:help="clr-namespace:Walkabout.Help" 
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
             mc:Ignorable="d"
             FontSize="{DynamicResource MainTransactionAreaFontSize}"
             d:DesignHeight="300" d:DesignWidth="600">

    <UserControl.ContextMenu>
        <ContextMenu>

            <MenuItem Name="menuItemToggleAccept" Header="Toggle _Accept" Command="views:TransactionsView.CommandAccept" InputGestureText="Ctrl-Space"/>
            <MenuItem Name="menuItemAcceptAll" Header="Accept All" Command="views:TransactionsView.CommandAcceptAll"/>
            <MenuItem Name="menuItemToggleVoid" Header="Toggle _Void" Command="views:TransactionsView.CommandVoid"/>
            <MenuItem Name="menuItemSplit" Header="_Splits..." Command="views:TransactionsView.CommandSplits"/>
            <MenuItem Name="menuItemRenamePayee" Header="_Rename Payee" Command="views:TransactionsView.CommandRenamePayee"/>
            <MenuItem Name="menuItemLookupPayee" Header="_Lookup Payee " Command="views:TransactionsView.CommandLookupPayee" InputGestureText="F3"/>
            <MenuItem Name="menuItemCategories" Header="Recategori_ze all..." Command="views:TransactionsView.CommandRecategorize"/>
            <MenuItem Name="menuItemSetTaxYear" Header="Set _Tax Date..." Command="views:TransactionsView.CommandSetTaxDate"/>

            <Separator/>
            <MenuItem Name="menuItemDelete" Header="_Delete" Command="Delete"/>
            <MenuItem Name="menuItemMove" Header="Move..." Command="views:TransactionsView.CommandMove"/>
            <Separator/>

            <MenuItem x:Name="MenuViewToggleOneLineView" Header="_One Line View" Command="views:TransactionsView.CommandViewToggleOneLineView" InputGestureText="Ctrl-T" IsChecked="{Binding OneLineView}"/>
            <MenuItem x:Name="MenuViewToggleSplitViews" Header="S_how All Splits" Command="views:TransactionsView.CommandViewToggleAllSplits" InputGestureText="Alt-T"  IsChecked="{Binding ViewAllSplits}"/>
            <Separator/>
            <MenuItem Name="menuItemGotoRelated" Header="_Go to related transaction" Command="views:TransactionsView.CommandGotoRelatedTransaction" InputGestureText="F12"/>
            <MenuItem Name="menuItemGotoStatement" Header="Go to state_ment" Command="views:TransactionsView.CommandGotoStatement"/>
            <!--<MenuItem Name="menuItemViewSimilar" Header="View _Similar Transactions" Command="views:TransactionsView.CommandViewSimilarTransactions"/>-->
            <Separator/>
            <MenuItem Name="menuItemByAccount" Header="V_iew Transactions by Account" Command="views:TransactionsView.CommandViewTransactionsByAccount" InputGestureText="F8"/>
            <MenuItem Name="menuItemByCategory" Header="View Transactions by _Category" Command="views:TransactionsView.CommandViewTransactionsByCategory" InputGestureText="F7"/>
            <MenuItem Name="menuItemByPayee" Header="View Transactions by _Payee" Command="views:TransactionsView.CommandViewTransactionsByPayee" InputGestureText="F6"/>
            <MenuItem Name="menuItemBySecurity" Header="View Transactions by S_ecurity" Command="views:TransactionsView.CommandViewTransactionsBySecurity" InputGestureText="F5"/>
            <MenuItem Name="menuItemViewSecurity" Header="View _Security" Command="views:TransactionsView.CommandViewSecurity"/>
            <MenuItem Name="menuItemViewCategory" Header="Categor_y Properties..." Command="views:TransactionsView.CommandViewCategory"/>
            <Separator/>
            <MenuItem Name="menuItemExport" Header="Export..." Command="views:TransactionsView.CommandViewExport"/>
        </ContextMenu>
    </UserControl.ContextMenu>

    <UserControl.CommandBindings>
        <CommandBinding Command="views:TransactionsView.CommandAccept" Executed="OnCommandAccept" CanExecute="CanExecute_Accept"/>
        <CommandBinding Command="views:TransactionsView.CommandAcceptAll" Executed="OnCommandAcceptAll" CanExecute="CanExecute_AcceptAll"/>
        <CommandBinding Command="views:TransactionsView.CommandCopySplits" Executed="OnCopySplits" CanExecute="CanCopySplits"/>
        <CommandBinding Command="views:TransactionsView.CommandPasteSplits" Executed="OnPasteSplits" CanExecute="CanPasteSplits"/>
        <CommandBinding Command="views:TransactionsView.CommandVoid" Executed="OnCommandVoid" CanExecute="CanExecute_Void" />
        <CommandBinding Command="views:TransactionsView.CommandSplits" Executed="OnCommandSplits" CanExecute="CanExecute_Splits" />
        <CommandBinding Command="views:TransactionsView.CommandRenamePayee" Executed="OnCommandRenamePayee" CanExecute="CanExecute_RenamePayee"/>
        <CommandBinding Command="views:TransactionsView.CommandLookupPayee" Executed="OnCommandLookupPayee" CanExecute="CanExecute_LookupPayee"/>
        <CommandBinding Command="views:TransactionsView.CommandRecategorize" Executed="OnRecategorizeAll" CanExecute="CanExecute_Recategorize" />
        <CommandBinding Command="views:TransactionsView.CommandSetTaxDate" Executed="OnSetTaxDate" CanExecute="CanExecute_SetTaxDate" />
        <CommandBinding Command="views:TransactionsView.CommandMove" Executed="OnMoveTransaction" CanExecute="CanExecute_Move" />

        <CommandBinding Command="views:TransactionsView.CommandGotoRelatedTransaction" Executed="OnCommandGotoRelatedTransaction"  CanExecute="CanExecute_GotoRelatedTransaction"/>
        <CommandBinding Command="views:TransactionsView.CommandGotoStatement" Executed="OnCommandGotoStatement" CanExecute="CanExecute_GotoStatement" />
        <CommandBinding Command="views:TransactionsView.CommandViewTransactionsByAccount" Executed="OnCommandViewTransactionsByAccount" CanExecute="CanExecute_ViewTransactionsByAccount" />
        <CommandBinding Command="views:TransactionsView.CommandViewSimilarTransactions" Executed="OnCommandViewSimilarTransactions" CanExecute="CanExecute_ViewSimilarTransactions" />
        <CommandBinding Command="views:TransactionsView.CommandViewTransactionsByCategory" Executed="OnCommandViewTransactionsByCategory" CanExecute="CanExecute_ViewTransactionsByCategory" />
        <CommandBinding Command="views:TransactionsView.CommandViewTransactionsByPayee" Executed="OnCommandViewTransactionsByPayee" CanExecute="CanExecute_ViewTransactionsByPayee" />
        <CommandBinding Command="views:TransactionsView.CommandViewTransactionsBySecurity" Executed="OnCommandViewTransactionsBySecurity" CanExecute="CanExecute_ViewTransactionsBySecurity" />
        <CommandBinding Command="views:TransactionsView.CommandViewSecurity" Executed="OnCommandViewSecurity" CanExecute="CanExecute_ViewSecurity"  />
        <CommandBinding Command="views:TransactionsView.CommandViewCategory" Executed="OnCommandViewCategory" CanExecute="CanExecute_ViewCategory"  />

        <CommandBinding Command="views:TransactionsView.CommandViewToggleOneLineView" Executed="OnCommandViewToggleOneLineView" CanExecute="CanExecute_ToggleOneLineView" />
        <CommandBinding Command="views:TransactionsView.CommandViewToggleAllSplits" Executed="OnCommandViewToggleAllSplits" CanExecute="CanExecute_ToggleViewsAllSplits"/>

        <CommandBinding Command="views:TransactionsView.CommandViewExport" Executed="OnCommandViewExport" />
        <CommandBinding Command="views:TransactionsView.CommandScanAttachment" Executed="OnScanAttachment" />
    </UserControl.CommandBindings>

    <UserControl.InputBindings>
        <KeyBinding Command="views:TransactionsView.CommandAccept" Key="Space" Modifiers="Control"/>
        <KeyBinding Command="views:TransactionsView.CommandViewToggleOneLineView" Key="T" Modifiers="Control"/>
        <KeyBinding Command="views:TransactionsView.CommandViewToggleAllSplits" Key="T" Modifiers="Alt"/>
        <KeyBinding Command="views:TransactionsView.CommandGotoRelatedTransaction" Key="F12" />
        <KeyBinding Command="views:TransactionsView.CommandViewTransactionsByAccount" Key="F8"/>
        <KeyBinding Command="views:TransactionsView.CommandViewTransactionsByCategory" Key="F7"/>
        <KeyBinding Command="views:TransactionsView.CommandViewTransactionsByPayee" Key="F6"/>
        <KeyBinding Command="views:TransactionsView.CommandViewTransactionsBySecurity" Key="F5"/>
        <KeyBinding Command="views:TransactionsView.CommandLookupPayee" Key="F3"/>
    </UserControl.InputBindings>

    <UserControl.Resources>

        <ContextMenu x:Key="SplitViewContextMenu">
            <MenuItem Name="menuItemCopySplit" Header="_Copy" Command="Copy"/>
            <MenuItem Name="menuItemPasteSplit" Header="_Paste" Command="Paste"/>
            <MenuItem Name="menuItemDeleteSplit" Header="_Delete" Command="Delete"/>
            <Separator/>
            <MenuItem Name="menuItemCopySplits" Header="_Copy All Splits" Command="views:TransactionsView.CommandCopySplits"/>
            <MenuItem Name="menuItemPasteSplits" Header="_Paste All Splits" Command="views:TransactionsView.CommandPasteSplits"/>
            <Separator/>
            <MenuItem Name="menuItemGotoRelated2" Header="_Go to related transaction" Command="views:TransactionsView.CommandGotoRelatedTransaction" InputGestureText="F12"/>
            <Separator/>
            <MenuItem Name="menuItemByAccount2" Header="_View Transactions by Account" Command="views:TransactionsView.CommandViewTransactionsByAccount" InputGestureText="F8"/>
            <MenuItem Name="menuItemByCategory2" Header="View Transactions by _Category" Command="views:TransactionsView.CommandViewTransactionsByCategory" InputGestureText="F7"/>
            <MenuItem Name="menuItemByPayee2" Header="View Transactions by _Payee" Command="views:TransactionsView.CommandViewTransactionsByPayee" InputGestureText="F6"/>
        </ContextMenu>

        <c:MoneyColorConverter x:Key="MoneyColorConverter"/>

        <views:ValidationErrorGetErrorMessageConverter x:Key="ValidationErrorGetErrorMessageConverter" />
        <c:PreserveDecimalDigitsValueConverter x:Key="PreserveDecimalDigitsValueConverter"/>

        <ControlTemplate x:Key="RowValidationErrorTemplate">
            <Grid ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors),
                        Converter={StaticResource ValidationErrorGetErrorMessageConverter}}" 
                   Background="{StaticResource ErrorMessageBrush}" Margin="-1,-2,1,2">
                <ui:SymbolIcon Symbol="Important" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </ControlTemplate>

        <c:NullableValueConverter x:Key="NullableValueConverter" />

        <c:TrueToVisible x:Key="TrueToVisible" />

        <c:RoutingLines x:Key="RoutingLines" />

        <Style x:Key="CurrentUnitStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value=".55"/>
            <Setter Property="FontStyle" Value="Italic"/>
        </Style>

        <Style x:Key="RunningUnitStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value=".55"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Foreground" Value="{Binding RunningUnits, Converter={StaticResource MoneyColorConverter}}"/>
        </Style>

        <Style x:Key="GridComboStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="StaysOpenOnEdit" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsTextSearchCaseSensitive" Value="true"/>
        </Style>

        <Style x:Key="GridTextBoxStyle" TargetType="{x:Type TextBox}"  BasedOn="{StaticResource DefaultTextBoxStyle}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="ui:TextBoxHelper.IsEnabled" Value="False"/>
        </Style>

        <Style x:Key="ButtonStyleSplitAmount" TargetType="{x:Type Button}" >
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Content" Value="{Binding Path=Splits.Count}"/>
            <Setter Property="Margin" Value="1,3,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource ListItemForegroundBrush}" />
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="MinWidth" Value="13"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="ToolTip" Value="Show or edit the splits for this transaction"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid SnapsToDevicePixels="True">
                            <Path   Name="ThePath"
                                    Fill="{DynamicResource GridAlternateBackgroundBrush}" Stretch="Fill" 
                                    Stroke="{DynamicResource ListItemForegroundBrush}"
                                    Data="M0,0 L15,0 15,11 7.5,15 0,10z" StrokeThickness="0.5"
                                    StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeDashCap="Round" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Top"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True"
                                              TextBlock.Foreground="{DynamicResource ListItemForegroundBrush}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Splits.HasUnassigned}" Value="True"  >
                                <Setter TargetName="ThePath" Property="Stroke" Value="{DynamicResource NegativeCurrencyForegroundBrush}"/>
                            </DataTrigger>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" Value="{DynamicResource ListItemSelectedBackgroundMouseOverBrush}" TargetName="ThePath"/>
                                <Setter Property="Effect" TargetName="ThePath" >
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" Value="{DynamicResource ListItemSelectedBackgroundBrush}" TargetName="ThePath"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- FIFO -->
        <DataTemplate x:Key="myTemplateFifo">
            <ContentPresenter Content="{Binding RoutingPath, Converter={StaticResource RoutingLines}}" SnapsToDevicePixels="True"/>
        </DataTemplate>

        <!-- PAYMENT USED IN DETAILED SPLIT VIEW -->
        <DataTemplate x:Key="myTemplateSplitPayment">
            <TextBlock  Style="{StaticResource DataTextBlockStyle}" Margin="0,0,2,0" 
                            Grid.Column="1" Text="{Binding Debit, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N2, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"                            
                            TextAlignment="Right" VerticalAlignment="Top" Foreground="{DynamicResource ListItemForegroundBrush}"/>
        </DataTemplate>
        <DataTemplate x:Key="myTemplatePaymentEditInTheSplitDetailedView">
            <TextBox Style="{StaticResource NumericTextBoxStyle}" Text="{Binding Debit, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N5, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" TextAlignment="Right"/>
        </DataTemplate>

        <!-- DEPOSIT USED IN DETAILED SPLIT VIEW -->
        <DataTemplate x:Key="myTemplateSplitDeposit">
            <TextBlock  Style="{StaticResource DataTextBlockStyle}" Margin="0,0,2,0" 
                            Grid.Column="1" Text="{Binding Credit, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N2, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"                            
                            TextAlignment="Right" VerticalAlignment="Top" Foreground="{DynamicResource ListItemForegroundBrush}"/>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateDepositEditInTheSplitDetailedView" >
            <TextBox Style="{StaticResource NumericTextBoxStyle}" Text="{Binding Credit, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N5, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" TextAlignment="Right" />
        </DataTemplate>

        <!-- Memo USED IN DETAILED SPLIT VIEW -->
        <DataTemplate x:Key="myTemplateSplitMemo">
            <TextBlock  Style="{StaticResource DataTextBlockStyle}" Margin="0,0,2,0"  Text="{Binding Memo}"    VerticalAlignment="Top" Foreground="{DynamicResource ListItemForegroundBrush}" />
        </DataTemplate>

        <DataTemplate x:Key="myTemplateMemoEditInTheSplitDetailedView" >
            <TextBox Style="{StaticResource GridTextBoxStyle}" BorderThickness="0" Text="{Binding Memo, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
        </DataTemplate>

        <!-- PAYEE ONLY -->
        <DataTemplate x:Key="myTemplateSplitPayee">
            <TextBlock Text="{Binding PayeeOrTransferCaption, Converter={StaticResource NullableValueConverter}}" Foreground="{DynamicResource ListItemForegroundBrush}" />
        </DataTemplate>

        <DataTemplate x:Key="myTemplateSplitPayeeEdit">
            <local:FilteringComboBox Style="{StaticResource GridComboStyle}"
                      SelectedItem="{Binding PayeeOrTransferCaption, Mode=TwoWay}"
                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:TransactionsView}}, Path=PayeesAndTransferNames}" 
                      PreviewLostKeyboardFocus="ComboBoxForPayee_PreviewLostKeyboardFocus"  
                      FilterChanged="ComboBoxForPayee_FilterChanged"
                     >
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </local:FilteringComboBox>
        </DataTemplate>


        <!-- CATEGORY ONLY -->
        <DataTemplate x:Key="myTemplateSplitCategory">
            <TextBlock Text="{Binding Category, Converter={StaticResource NullableValueConverter}}" Foreground="{DynamicResource ListItemForegroundBrush}"/>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateSplitCategoryEdit">
            <!--<TextBlock Text="{Binding Category.Name, Converter={StaticResource NullableValueConverter}}" />-->
            <local:FilteringComboBox   Style="{StaticResource GridComboStyle}"
                        SelectedItem="{Binding Category, Mode=TwoWay}"
                        ItemsSource="{Binding Path=Categories}" 
                        PreviewLostKeyboardFocus="ComboBoxForCategory_PreviewLostKeyboardFocus"
                        PreviewGotKeyboardFocus="ComboBoxForCategory_PreviewGotKeyboardFocus"
                        FilterChanged="ComboBoxForCategory_FilterChanged"
                        ItemContainerStyle="{DynamicResource ComboBoxItemCategory}"        
                        >
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </local:FilteringComboBox>
        </DataTemplate>

        <!-- PAYEE / CATEGORY / MEMO -->
        <!-- This editing template is instantiated from code. -->
        <DataTemplate x:Key="myTemplatePayeeCategoryMemoEdit">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Focusable="false"
                        >
                <!-- PAYEE -->
                <local:FilteringComboBox Style="{StaticResource GridComboStyle}" x:Name="EditorForPayeeOrTransferCaption"
                        SelectedItem="{Binding PayeeOrTransferCaption, Mode=TwoWay}"
                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:TransactionsView}}, Path=PayeesAndTransferNames}" 
                        PreviewLostKeyboardFocus="ComboBoxForPayee_PreviewLostKeyboardFocus" 
                        FilterChanged="ComboBoxForPayee_FilterChanged"
                        >
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </local:FilteringComboBox >
                <!-- CATEGORY -->
                <local:FilteringComboBox Style="{StaticResource GridComboStyle}" x:Name="EditorForCategoryName"
                            SelectedItem="{Binding Category, Mode=TwoWay}"
                            ItemsSource="{Binding Categories}" 
                            PreviewLostKeyboardFocus="ComboBoxForCategory_PreviewLostKeyboardFocus"
                            PreviewGotKeyboardFocus="ComboBoxForCategory_PreviewGotKeyboardFocus"
                            FilterChanged="ComboBoxForCategory_FilterChanged"
                            ItemContainerStyle="{DynamicResource ComboBoxItemCategory}"        
                            >
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>

                </local:FilteringComboBox >
                <!-- MEMO -->
                <TextBox Text="{Binding Memo, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" FontStyle="Italic" 
                            Style="{StaticResource GridTextBoxStyle}" BorderThickness="0" x:Name="EditorForMemo"/>
            </StackPanel>
        </DataTemplate>

        <!-- ACTIVITY -->
        <DataTemplate x:Key="myTemplateActivity" >
            <TextBlock Text="{Binding InvestmentType, Converter={StaticResource NullableValueConverter}}" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateActivityEdit">
            <ComboBox Style="{StaticResource GridComboStyle}"  x:Name="EditorForActivity"
                SelectedItem="{Binding Path=InvestmentType, Mode=TwoWay}"
                ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:TransactionsView}}, Path=Activities}" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
        </DataTemplate>


        <!-- SYMBOL -->
        <DataTemplate x:Key="myTemplateSymbol">
            <TextBlock Text="{Binding Path=InvestmentSecurity, Converter={StaticResource NullableValueConverter}}" VerticalAlignment="Top"  HorizontalAlignment="Stretch"/>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateSymbolEdit">
            <local:FilteringComboBox Style="{StaticResource GridComboStyle}"  HorizontalAlignment="Stretch" x:Name="EditorForSymbol"
                    SelectedItem="{Binding Path=InvestmentSecurity, Mode=TwoWay}"
                    ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:TransactionsView}}, Path=Securities}" VerticalAlignment="Top"
                    PreviewLostKeyboardFocus="ComboBoxSymbol_PreviewLostKeyboardFocus"  
                    FilterChanged="ComboBoxForSymbols_FilterChanged"
                    ItemContainerStyle="{DynamicResource ComboBoxItemSecurity}"   >
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </local:FilteringComboBox>
        </DataTemplate>

        <!-- 
        Detail mini view for showing splits always
        -->
        <DataTemplate x:Key="myDataGridDetailMiniView">
            <Border Visibility="{Binding IsSplit, Converter={StaticResource TrueToVisible}}" Background="Transparent"
                    BorderBrush="{DynamicResource ListItemForegroundBrush}" BorderThickness="1" CornerRadius="5" Margin="10,-1,10,10"
                    >
                <Border.Resources>
                    <Style x:Key="GridViewAlternationItemStyle" TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex),
                            Converter={StaticResource GridBackgroundAlternationConverter}}"/>
                    </Style>
                </Border.Resources>
                <StackPanel Orientation="Vertical">
                    <ListView x:Name="TheMiniListForAmountSplit" 
                             BorderThickness="0"
                             AlternationCount="2"
                             IsEnabled="False"
                             Padding="0"                             
                             Margin="0" 
                             ItemContainerStyle="{StaticResource GridViewAlternationItemStyle}"
                             ItemsSource="{Binding Path=NonNullSplits.ObservableCollection}">
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="{DynamicResource ListItemForegroundBrush}" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="Auto" x:Name="Payee" DisplayMemberBinding="{Binding Path=PayeeName}"/>
                                <GridViewColumn Width="Auto" x:Name="Category" DisplayMemberBinding="{Binding Path=Category}"/>
                                <GridViewColumn Width="Auto" x:Name="Amount" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                              <TextBlock Text="{Binding Amount, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N2, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"  
                                                       Width="100" 
                                                       Foreground="{DynamicResource ListItemForegroundBrush}"
                                                       HorizontalAlignment="Right"
                                                       TextAlignment="Right" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Orientation="Horizontal" x:Name="UnassignedGrid" Margin="24,5,10,10"
                                Visibility="{Binding Splits.HasUnassigned, Converter={StaticResource TrueToVisible}}"
                                TextBlock.Foreground="{DynamicResource NegativeCurrencyForegroundBrush}">
                        <TextBlock Text="Unassigned amount: " />
                        <TextBlock Text="{Binding Path=NonNullSplits.Unassigned, Converter={StaticResource PreserveDecimalDigitsValueConverter}, ConverterParameter=N2, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </DataTemplate>

        <!-- 
             DETAIL VIEW and EDIT for showing splits in expandable view
        -->
        <DataTemplate x:Key="myDataGridDetailView">

            <Border Background="{DynamicResource ListItemSelectedBackgroundBrush}" >

                <Border  x:Name="MainBorderForSplitterView" Margin="8,0,13,13" 
                         Style="{DynamicResource MainBorderForSplitterViewStyle}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <local:MoneyDataGrid  x:Name="TheGridForAmountSplit"
                                  Loaded="TheGridForAmountSplit_Loaded"
                                  Unloaded="TheGridForAmountSplit_Unloaded"
                                  Background="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}"
                                  ItemsSource="{Binding Path=NonNullSplits.ObservableCollection}"
                                  RowValidationErrorTemplate="{StaticResource RowValidationErrorTemplate}"
                                  RowEditEnding="TheGridForAmountSplit_RowEditEnding"
                                  CellStyle="{DynamicResource MyDataGridCellStyle}"
                                  Style="{DynamicResource MyDataGridStyle2}" 
                                  help:HelpService.HelpKeyword="Basics/Splits/"
                                  CanUserAddRows="True"
                                  AutoGenerateColumns="False"
                                  ContextMenu="{StaticResource SplitViewContextMenu}">
                            <DataGrid.Columns>

                                <!-- PAYEE -->
                                <DataGridTemplateColumn Header="Payee" CellTemplate="{StaticResource myTemplateSplitPayee}" CellEditingTemplate="{StaticResource myTemplateSplitPayeeEdit}" MinWidth="100"/>

                                <!-- CATEGORY -->
                                <DataGridTemplateColumn Header="Category" CellTemplate="{StaticResource myTemplateSplitCategory}" CellEditingTemplate="{StaticResource myTemplateSplitCategoryEdit}" MinWidth="100"/>

                                <!-- PAYEMENT-->
                                <DataGridTemplateColumn Header="Payment"  CellTemplate="{StaticResource myTemplateSplitPayment}" CellEditingTemplate="{StaticResource myTemplatePaymentEditInTheSplitDetailedView}"/>

                                <!-- DEPOSIT -->
                                <DataGridTemplateColumn Header="Deposit"  CellTemplate="{StaticResource myTemplateSplitDeposit}" CellEditingTemplate="{StaticResource myTemplateDepositEditInTheSplitDetailedView}"/>

                                <!-- MEMO -->
                                <DataGridTemplateColumn Header="Memo" MinWidth="300" CellTemplate="{StaticResource myTemplateSplitMemo}" CellEditingTemplate="{StaticResource myTemplateMemoEditInTheSplitDetailedView}"/>

                            </DataGrid.Columns>
                        </local:MoneyDataGrid>

                        <TextBlock Text="{Binding NonNullSplits.SplitsBalanceMessage}" Margin="5" Grid.Row="1"
                                   ToolTip="Press F6 to assign the delta amount to the currently select split entry"/>
                    </Grid>
                </Border>
            </Border>
        </DataTemplate>

        <Style x:Key="MyDataGridStyle" TargetType="{x:Type local:MoneyDataGrid}">
            <Setter Property="ItemsSource" Value="{Binding}"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}"/>
            <Setter Property="RowBackground" Value="{DynamicResource GridNormalBackgroundBrush}"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource GridAlternateBackgroundBrush}"/>
            <Setter Property="GridLinesVisibility" Value="Vertical"/>
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GridLineBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ListItemForegroundBrush}"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
            <Setter Property="RowDetailsTemplate" Value="{StaticResource myDataGridDetailView}"/>
            <Setter Property="ClipboardCopyMode" Value="None"/>
            <Setter Property="ContentMargin" Value="0,0,0,30"/>
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>

        <Style x:Key="MyDataGridStyle2" TargetType="DataGrid">
            <Setter Property="ItemsSource" Value="{Binding}"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}"/>
            <Setter Property="RowBackground" Value="{DynamicResource GridNormalBackgroundBrush}"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource GridAlternateBackgroundBrush}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GridLineBrush}"/>
            <Setter Property="GridLinesVisibility" Value="Vertical"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
            <Setter Property="ClipboardCopyMode" Value="None"/>
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
      
      <Style TargetType="{x:Type DataGridRowHeader}" >
        <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeMediumLowBrush}" />
        <Setter Property="Foreground" Value="White" />
      </Style>

      <Style x:Key="MyDataGridRowStyle" TargetType="DataGridRow">
            <EventSetter Event="DragOver" Handler="OnDataGridRowDragOver"/>
            <EventSetter Event="DragEnter" Handler="OnDataGridRowDragEnter"/>
            <EventSetter Event="DragLeave" Handler="OnDataGridRowDragLeave"/>
            <EventSetter Event="Drop" Handler="OnDataGridRowDragDrop"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=TransactionDropTarget}" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource ValidDropTargetFeedbackBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TransactionDropTarget}" Value="False">
                    <Setter Property="BorderThickness" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <!-- the TransactionCell border properties makes the whole column hittable when in expanded 3 lines per row mode. -->
                        <views:TransactionCell BorderThickness="0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch" Margin="0,-2,0,2">
                            <ContentPresenter  SnapsToDevicePixels="True"/>
                        </views:TransactionCell>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>

            <!-- Top Search area -->
            <RowDefinition x:Name="SearchAreaRow" Height="Auto"/>

            <!-- Splitter -->
            <RowDefinition x:Name="QuerySplitterGridRowHeight" Height="0" />

            <!-- Editing Area [Transactions and Rent panel] -->
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>

        <!-- SEARCH AREA -->
        <Grid Grid.Row="0" x:Name="SearchArea">

            <Grid.RowDefinitions >
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- QUICK SEARCH BUTTON AREA -->
            <Border Background="{DynamicResource SystemControlPageBackgroundChromeLowBrush}"  SizeChanged="Border_SizeChanged">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">

                        <!-- COMBO BOX STATE FILTERS -->
                        <ComboBox x:Name="TransactionViewMode" Margin="5,2,0,2" SelectionChanged="ComboBox_SelectionChanged" Width="140"
                                  VerticalAlignment="Center" BorderThickness="0" Background="{DynamicResource ButtonBackground}">
                            <ComboBoxItem x:Name="FilterByNothing" >
                                <TextBlock Text="All" />
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByReconciled">
                                <TextBlock  Text="Reconciled" />
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByUnreconciled">
                                <TextBlock  Text="Unreconciled" />
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByAccepted">
                                <TextBlock  Text="Accepted" />
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByUnaccepted">
                                <TextBlock  Text="Unaccepted" />
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByCategorized">
                                <TextBlock  Text="Categorized"/>
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByUncategorized">
                                <TextBlock  Text="Uncategorized"/>
                            </ComboBoxItem>
                            <ComboBoxItem x:Name="FilterByCustom">
                                <TextBlock Text="Custom"/>
                            </ComboBoxItem>
                        </ComboBox>

                        <!-- Toggle view for OneLine -->
                        <Button x:Name="ToggleShowLines" Margin="5,2,0,2"  VerticalAlignment="Center" ToolTip="Toggle One Line View (Ctrl-T)" Click="OnToggleLines" >
                            <ui:SymbolIcon Symbol="ShowResults" x:Name="ToggleShowLinesImage" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Button>

                        <!-- Toggle view for Show splits -->
                        <Button x:Name="ToggleShowSplits" VerticalAlignment="Center" Margin="5,2,0,2" ToolTip="Show All Splits (Alt-T)" Click="OnToggleShowSplits" >
                            <ui:SymbolIcon Symbol="ShowBcc" x:Name="ToggleShowSplitsImage" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Button>

                        <!-- Toggle view for expand all in portfolio view -->
                        <ToggleButton x:Name="ToggleExpandAll" VerticalAlignment="Center" Width="26" Height="26" Margin="5,2,0,2" ToolTip="Show Details" Checked="OnToggleShowSecurities_Checked" Unchecked="OnToggleShowSecurities_Unchecked" >
                            <ui:SymbolIcon Symbol="ShowBcc"/>
                        </ToggleButton>
                    </StackPanel>

                    <!-- RUN -->
                    <Button x:Name="RunQuery" Grid.Column="1" Command="p:AppCommands.CommandQueryRun" Margin="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                        <TextBlock x:Name="Run" Text="Search" VerticalAlignment="Center" Margin="2,0,2,0" TextAlignment="Center"/>
                    </Button>


                    <StackPanel x:Name="SearchWidgetArea"  Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,2,2,2" VerticalAlignment="Center" >


                        <!-- QUICK FILTER -->
                        <local:QuickFilterControl x:Name="QuickFilterUX"  Width="200" FilterValueChanged="OnQuickFilterValueChanged" HorizontalAlignment="Left"/>

                        <!-- ADVANCE & CLOSE -->
                        <Expander x:Name="AdvancedSearch" HorizontalAlignment="Right" Margin="8 0 0 0" VerticalAlignment="Center" ToolTip="Show advanced query"
                              IsExpanded="{Binding IsQueryPanelDisplayed, Mode=TwoWay}">
                        </Expander>

                    </StackPanel>
                </Grid>

            </Border>

            <!-- FULL ADVANCED QUERY -->
            <vc:QueryViewControl x:Name="QueryPanel" Grid.Row="1" Visibility="Collapsed" />

        </Grid>


        <!-- Split between Search and Transaction -->
        <GridSplitter x:Name="QueryPanelSplitter" Grid.Row="1" HorizontalAlignment="Stretch"  ResizeBehavior="PreviousAndNext" Visibility="Collapsed" ShowsPreview="false"/>

        <!-- TRANSACTIONS -->
        <Grid x:Name="TransactionsGrid" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TabControl x:Name="InvestmentAccountTabs" Visibility="Collapsed">
                <TabItem Header="Activity" />
                <TabItem Header="Portfolio" />
            </TabControl>

            <!-- BANK -->
            <!-- Note the SecondarySortOrder has to match the Transaction SortByDate method -->
            <local:MoneyDataGrid 
                x:Name="TheGrid_BankTransactionDetails" 
                Grid.Row="1" 
                CellStyle="{StaticResource MyDataGridCellStyle}"
                Style="{StaticResource MyDataGridStyle}" 
                RowStyle="{StaticResource MyDataGridRowStyle}"
                RowValidationErrorTemplate="{StaticResource RowValidationErrorTemplate}"
                RowDetailsVisibilityMode="Visible" 
                SecondarySortOrder="Date,NegativeAmount,Id"
                >

                <DataGrid.Columns>

                    <!-- Scanned Attachment -->
                    <views:TransactionAttachmentColumn Header="A" SortMemberPath="HasAttachment" AutomationProperties.AutomationId="AttachmentColumn"/>

                    <!-- NUMBER -->
                    <views:TransactionNumberColumn Header="Num" SortMemberPath="Number"/>

                    <!-- DATE -->
                    <views:TransactionDateColumn Header="Date" SortMemberPath="Date" SortDirection="Ascending"/>

                    <!-- Category Color -->
                    <views:TransactionCategoryColorColumn Header="C" SortMemberPath="CategoryFullName" IsReadOnly="True"/>

                    <!-- PAYEE - CATEGORY - MEMO -->
                    <views:TransactionPayeeCategoryMemoColumn Header="Payee/Category/Memo" SortMemberPath="PayeeOrTransferCaption"/>

                    <!-- STATUS -->
                    <views:TransactionStatusColumn  Header="S" IsReadOnly="True" SortMemberPath="StatusString"/>

                    <!-- TAX -->
                    <views:TransactionNumericColumn Header="Sales Tax" SortMemberPath="SalesTax"/>

                    <!-- PAYMENT-->
                    <views:TransactionAmountColumn Header="Payment" SortMemberPath="Debit"/>

                    <!-- DEPOSIT -->
                    <views:TransactionAmountColumn Header="Deposit" SortMemberPath="Credit"/>

                    <!-- BALANCE -->
                    <views:TransactionNumericColumn Header="Balance" SortMemberPath="Balance" IsReadOnly="True"/>

                    <!-- ANCHOR -->
                    <views:TransactionAnchorColumn IsReadOnly="True"/>

                </DataGrid.Columns>
            </local:MoneyDataGrid>

            <!-- BY CATEGORY -->
            <!-- Note the SecondarySortOrder has to match the Transaction SortByDate method -->
            <local:MoneyDataGrid 
                x:Name="TheGrid_TransactionFromDetails" 
                Grid.Row="1" 
                CellStyle="{StaticResource MyDataGridCellStyle}"
                Style="{StaticResource MyDataGridStyle}"  
                RowStyle="{StaticResource MyDataGridRowStyle}"
                RowValidationErrorTemplate="{StaticResource RowValidationErrorTemplate}"
                CanUserAddRows="False" 
                SecondarySortOrder="Date,NegativeAmount,Id"
                >

                <DataGrid.Columns>

                    <!-- Scanned Attachment -->
                    <views:TransactionAttachmentColumn Header="A" SortMemberPath="HasAttachment" AutomationProperties.AutomationId="AttachmentColumn"/>

                    <!-- ACCOUNT -->
                    <DataGridTextColumn Header="Account" Binding="{Binding Account.Name, Converter={StaticResource NullableValueConverter}}" IsReadOnly="True" />

                    <!-- CURRENCY -->
                    <DataGridTextColumn Header="Currency" Binding="{Binding Account.Currency, Converter={StaticResource NullableValueConverter}}" IsReadOnly="True" />

                    <!-- NUMBER -->
                    <views:TransactionNumberColumn Header="Num" SortMemberPath="Number"/>

                    <!-- DATE -->
                    <views:TransactionDateColumn Header="Date" SortMemberPath="Date" SortDirection="Ascending"/>

                    <!-- Category Color -->
                    <views:TransactionCategoryColorColumn Header="C" MaxWidth="20" SortMemberPath="CategoryFullName" IsReadOnly="True"/>

                    <!-- PAYEE - CATEGORY - MEMO -->
                    <views:TransactionPayeeCategoryMemoColumn Header="Payee/Category/Memo" SortMemberPath="PayeeOrTransferCaption"/>

                    <!-- STATUS -->
                    <views:TransactionStatusColumn  Header="S" IsReadOnly="True" SortMemberPath="StatusString"/>

                    <!-- PAYMENT-->
                    <views:TransactionAmountColumn Header="Payment" SortMemberPath="Debit"/>

                    <!-- DEPOSIT -->
                    <views:TransactionAmountColumn Header="Deposit" SortMemberPath="Credit"/>

                    <!-- ANCHOR -->
                    <views:TransactionAnchorColumn IsReadOnly="True"/>

                </DataGrid.Columns>
            </local:MoneyDataGrid>

            <!-- ACCOUNT OF TYPE INVESTMENT -->
            <!-- Note the SecondarySortOrder has to match the Transaction SortByDate method -->
            <local:MoneyDataGrid 
                x:Name="TheGrid_InvestmentActivity"  
                Grid.Row="1" 
                Style="{StaticResource MyDataGridStyle}"  
                RowStyle="{StaticResource MyDataGridRowStyle}" 
                RowValidationErrorTemplate="{StaticResource RowValidationErrorTemplate}"
                CellStyle="{StaticResource MyDataGridCellStyle}" 
                SecondarySortOrder="Date,NegativeAmount,Id"
                >

                <DataGrid.Columns>

                    <!-- Scanned Attachment -->
                    <views:TransactionAttachmentColumn Header="A" SortMemberPath="HasAttachment" AutomationProperties.AutomationId="AttachmentColumn"/>

                    <!-- NUMBER/REF -->
                    <views:TransactionNumberColumn Header="Ref" SortMemberPath="Number" />

                    <!-- DATE -->
                    <views:TransactionDateColumn Header="Date" SortMemberPath="Date" SortDirection="Ascending"/>

                    <!-- Category Color -->
                    <views:TransactionCategoryColorColumn Header="C" MaxWidth="20" SortMemberPath="CategoryFullName" IsReadOnly="True"/>

                    <!-- PAYEE - CATEGORY - MEMO -->
                    <views:TransactionPayeeCategoryMemoColumn Header="Payee/Category/Memo" SortMemberPath="PayeeOrTransferCaption"/>

                    <!-- ACTIVITY -->
                    <DataGridTemplateColumn Header="Activity"  CellTemplate="{StaticResource myTemplateActivity}" CellEditingTemplate="{StaticResource myTemplateActivityEdit}"
                                        SortMemberPath="InvestmentType"/>

                    <!-- SECURITY -->
                    <DataGridTemplateColumn Header="Security"  CellTemplate="{StaticResource myTemplateSymbol}" CellEditingTemplate="{StaticResource myTemplateSymbolEdit}"
                                        SortMemberPath="SortableInvestmentSecurity"/>


                    <views:TransactionNumericColumn Header="Units" SortMemberPath="InvestmentUnits" />

                    <!-- Price per unit -->
                    <views:TransactionNumericColumn Header="Unit Price" SortMemberPath="InvestmentUnitPrice" />

                    <!-- STATUS -->
                    <views:TransactionStatusColumn  Header="S" IsReadOnly="True" SortMemberPath="StatusString"/>

                    <!-- SALES TAX -->
                    <views:TransactionNumericColumn Header="Sales Tax" SortMemberPath="SalesTax"/>

                    <!-- PAYEMENT-->
                    <views:TransactionAmountColumn Header="Payment" SortMemberPath="Debit"/>

                    <!-- DEPOSIT -->
                    <views:TransactionAmountColumn Header="Deposit" SortMemberPath="Credit"/>

                    <!-- BALANCE -->
                    <views:TransactionNumericColumn Header="Cash Balance" SortMemberPath="Balance" IsReadOnly="True"/>

                    <!-- ANCHOR -->
                    <views:TransactionAnchorColumn IsReadOnly="True"/>
                </DataGrid.Columns>
            </local:MoneyDataGrid>

            <!-- VIEW SECURITY ACCROSS ALL ACCOUNT -->
            <!-- Note the SecondarySortOrder has to match the Transaction SortByDate method -->
            <local:MoneyDataGrid 
                  x:Name="TheGrid_BySecurity" 
                  Grid.Row="1" 
                  Style="{StaticResource MyDataGridStyle}"
                  RowStyle="{StaticResource MyDataGridRowStyle}" 
                  RowValidationErrorTemplate="{StaticResource RowValidationErrorTemplate}"
                  CellStyle="{StaticResource MyDataGridCellStyle}"
                  CanUserAddRows="False" 
                  SecondarySortOrder="Date,NegativeAmount,Id"
                  >

                <DataGrid.Columns>

                    <!-- ACCOUNT -->
                    <DataGridTextColumn Header="Account" Binding="{Binding Account.Name, Converter={StaticResource NullableValueConverter}}" IsReadOnly="True" />

                    <!-- DATE -->
                    <views:TransactionDateColumn Header="Date" SortMemberPath="Date" SortDirection="Ascending"/>

                    <!-- PAYEE - CATEGORY - MEMO -->
                    <views:TransactionPayeeCategoryMemoColumn Header="Payee/Category/Memo" SortMemberPath="PayeeOrTransferCaption"/>

                    <!-- SECURITY -->
                    <DataGridTemplateColumn Header="Security"  CellTemplate="{StaticResource myTemplateSymbol}" CellEditingTemplate="{StaticResource myTemplateSymbolEdit}"
                                        SortMemberPath="SortableInvestmentSecurity"/>

                    <!-- ACTIVITY -->
                    <DataGridTemplateColumn Header="Activity"  CellTemplate="{StaticResource myTemplateActivity}" CellEditingTemplate="{StaticResource myTemplateActivityEdit}"
                                        SortMemberPath="InvestmentType"/>

                    <!-- FIFO TRACKING -->
                    <DataGridTemplateColumn Header="FIFO"  CellTemplate="{StaticResource myTemplateFifo}" 
                                        SortMemberPath="RoutingPath" />

                    <!-- UNITS -->
                    <views:TransactionNumericColumn Header="Units" SortMemberPath="InvestmentUnits" />

                    <!-- UNITS  AFTER SPLITS -->
                    <views:TransactionNumericColumn Header="Units A.S." SortMemberPath="CurrentUnits" IsReadOnly="True"
                                                    TextBlockStyle="{StaticResource CurrentUnitStyle}"/>

                    <!-- RUNNING TOTAL UNITS -->
                    <views:TransactionNumericColumn Header="Holding" SortMemberPath="RunningUnits" IsReadOnly="true" 
                                                    TextBlockStyle="{StaticResource RunningUnitStyle}"/>

                    <!-- Price per unit -->
                    <views:TransactionNumericColumn Header="Unit Price" SortMemberPath="InvestmentUnitPrice" IsReadOnly="true" />

                    <!-- Price per unit after split -->
                    <views:TransactionNumericColumn Header="Price A.S." SortMemberPath="CurrentUnitPrice" IsReadOnly="True"
                                                    TextBlockStyle="{StaticResource CurrentUnitStyle}"/>

                    <!-- STATUS -->
                    <views:TransactionStatusColumn  Header="S" IsReadOnly="True" SortMemberPath="StatusString"/>

                    <!-- PAYEMENT-->
                    <views:TransactionAmountColumn Header="Payment" SortMemberPath="Debit"/>

                    <!-- DEPOSIT -->
                    <views:TransactionAmountColumn Header="Deposit" SortMemberPath="Credit"/>

                    <!-- RUNNING BALANCE -->
                    <views:TransactionNumericColumn Header="Balance" SortMemberPath="RunningBalance" IsReadOnly="True"/>

                    <!-- ANCHOR -->
                    <views:TransactionAnchorColumn IsReadOnly="True"/>
                </DataGrid.Columns>
            </local:MoneyDataGrid>

            <!-- VIEW CURRENTLY HELD SECURITIES FOR ACCOUNT AKA "PORTFOLIO TAB" -->
            <views:FlowDocumentView x:Name="InvestmentPortfolioView" Grid.Row="1" ShowSearchStrip="False" >
            </views:FlowDocumentView>

            <!-- MAGNIFY GLASS -->
            <Viewbox  Name="FilterWatermark" Margin="120,120,20,20" Grid.Row="1"   VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                  IsHitTestVisible="False"  Visibility="Collapsed" Style="{DynamicResource SmoothFadeIn}">
                <Grid Opacity="0.05">
                    <Ellipse Fill="Transparent" HorizontalAlignment="Left" Height="14" Width="14" Stroke="Gray" VerticalAlignment="Top" StrokeThickness="2" />
                    <Path Data="M12,12 L16,16" Stroke="Gray" StrokeThickness="3.5" StrokeEndLineCap="Round" StrokeStartLineCap="Triangle" />
                </Grid>
            </Viewbox >

        </Grid>

        <Canvas x:Name="GridOverlayCanvas" Grid.Row="2"
                 u:WpfAnnotations.CodeRef="ButtonStyleSplitAmount, myTemplatePayeeCategoryMemoEdit, myDataGridDetailMiniView, ListItemSelectedForegroundDisabledBrush, ListItemSelectedForegroundNegativeBrush, ListItemForegroundUnacceptedBrush, ListItemSelectedForegroundLowBrush, ListItemDownloadedBackgroundBrush, ListItemReconcilingBackgroundBrush, PositiveCurrencyForegroundBrush, HyperlinkForeground, DragDropFeedbackBrush, TransactionConnectorBrush, TransactionConnectorForegroundBrush, TransactionConnectorButtonBackground, TransactionConnectorButtonPressedBackground, TransactionConnectorButtonMouseOverBackground, DragDropWindowStyle, ListItemCuttingBackgroundBrush"
                ></Canvas>
    </Grid>

</UserControl>